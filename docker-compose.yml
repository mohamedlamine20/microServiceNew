---
version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    ports:
      # To learn about configuring Kafka for access across networks see
      # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  keycloak:
    image: quay.io/keycloak/keycloak:20.0.2
    container_name: keycloak
    command: [ "start-dev"]
    ports:
      - "8181:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    ports:
      - "9411:9411"

  product-service-app:
    container_name: product-service-app
    build:
      context: ./product-service
    ports:
      - "8989:8989"
    depends_on:
      - mongo-db
      - discovery-server-app
      - api-gateway-service-app
    environment:
      - DATA_BASE_HOST=mongo-db
      - EUREKA_HOST=discovery-server-app
      - ZIPKIN_HOST=zipkin


  api-gateway-service-app:
    container_name: api-gateway-app
    build:
      context: ./api-gateway
    ports:
      - "8080:8080"
    restart: always
    depends_on:
      - discovery-server-app
    environment:
      - EUREKA_HOST=discovery-server-app
      - ZIPKIN_HOST=zipkin


  discovery-server-app:
    container_name: discovery-server-app
    build:
      context: ./discovry-server
    ports:
      - "8761:8761"
    restart: always

  inventory-service-app:
    container_name: inventory-service-app
    build:
      context: ./inventory-service
    ports:
      - "9191:9191"
    depends_on:
      - discovery-server-app
      - api-gateway-service-app
      - zipkin
      - keycloak
      - broker
      - zookeeper
      - inventory-service-db
    environment:
      - EUREKA_HOST=discovery-server-app
      - KAFKA_HOST=broker
      - ZIPKIN_HOST=zipkin
      - DATA_BASE_HOST=inventory-service-db


  notification-service-app:
    container_name: notification-service-app
    build:
      context: ./notification-service
    ports:
      - "9292:9292"
    depends_on:
      - zookeeper
      - broker
      - keycloak
      - zipkin
      - api-gateway-service-app
      - discovery-server-app
    environment:
      - EUREKA_HOST=discovery-server-app
      - KAFKA_HOST=broker


  order-service-app:
    container_name: order-service-app
    build:
      context: ./order-service
    ports:
      - "9393:9393"
    depends_on:
      - order-service-db
      - discovery-server-app
      - api-gateway-service-app
      - zipkin
      - keycloak
      - broker
      - zookeeper
    environment:
      - KAFKA_HOST=broker
      - EUREKA_HOST=discovery-server-app
      - ZIPKIN_HOST=zipkin
      - DATA_BASE_HOST=order-service-db

  order-service-db:
    image: mysql
    container_name: order-service-db
    ports:
      - "3306:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: orderservice

  inventory-service-db:
    image: mysql
    container_name: inventory-service-db
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: inventoryservice

  mongo-db :
    image: mongo
    container_name: mongo-db
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_DATABASE : Product