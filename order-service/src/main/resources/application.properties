spring.profiles.active=docker


eureka.client.serviceUrl.defaultZone=http://eureka:password@${EUREKA_HOST:localhost}:8761/eureka

spring.application.name=order-service

management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.exclude=*
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.inventory-service.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory-service.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory-service.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory-service.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory-service.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory-service.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory-service.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory-service.automaticTransitionFromOpenToHalfOpenEnabled=true

#Resilience4J Timeout Properties
resilience4j.timelimiter.instances.inventory-service.timeout-duration=3s

#Resilience4J Retry Properties
resilience4j.retry.instances.inventory-service.max-attempts=3
resilience4j.retry.instances.inventory-service.wait-duration=5s

spring.sleuth.integration.enabled=true
spring.zipkin.base-url=http://${ZIPKIN_HOST:localhost}:9411
spring.sleuth.sampler.probability=1.0


spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost}:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.moha.OrderService.DTO.OrderNotification
